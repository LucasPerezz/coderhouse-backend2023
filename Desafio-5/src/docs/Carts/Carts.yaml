paths:
  /api/carts/:
    post:
      summary: Crear un nuevo carrito
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/cartBody'
      responses:
        "200":
          description: El carrito se creo exitosamente
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: success,
                    message: "El carrito fue agregado con exito. ID: {cid}"
                  }
  

  /api/carts/{cid}:

    get:
      summary: Muestra los datos de un carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito que se desea obtener
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue obtenido satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Cart'
        "404":
          description: No se encontro carrito con ese ID
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: error,
                    message: "No se encontro carrito con el ID {cid}"
                  }
  

    put:
      summary: Modifica un carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito que se desea obtener
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/cartBody'
      responses:
        "200":
          description: El carrito fue modificado satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: success,
                    message: "Carrito modificado con exito. ID: {cartId}."
                  }

    delete:
      summary: Eliminar todos los productos de un carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito que se desea obtener
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue eliminado satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: success,
                    message: "Se eliminaron todos los productos del carrito. ID: ${cartId}."
                  }

  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agrega un producto al carrito indicado
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito que se desea obtener
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: Id del producto que se desea obtener
          schema:
            $type: String
      responses:
        "200":
          description: El producto fue agregado satisfactoriamente al carrito
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: success,
                    message: "Producto ${productId} cargado con exito al carrito. ID: ${cartId}"
                  }

    put:
      summary: Modifica la cantidad de un producto en un carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito que se desea obtener
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: Id del producto que se desea obtener
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/cartBody'
      responses:
        "200":
          description: La cantidad del producto fue modificada satisfactoriamente en el carrito
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: success,
                    message: "Se modifico la cantidad del producto ${productId} por ${quantity}. ID: ${cartId}."
                  }

    delete:
      summary: Eliminar un producto de un carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito que se desea obtener
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: Id del producto que se desea obtener
          schema:
            $type: String
      responses:
        "200":
          description: El producto fue eliminado satisfactoriamente del carrito
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: success,
                    message: "Producto ${productId} eliminado con exito del carrito. ID: ${cartId}."
                  }

  /api/carts/:cid/purchase:
    get:
      summary: Realizar compra del contenido del carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito que se desea obtener
          schema:
            $type: String
      responses:
        "200":
          description: La compra del carrito fue realizada satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/cartPurchase'
        "404":
          description: No se encontro carrito con ese ID
          content:
            application/json:
              schema:
                type: object
                items:
                  - {
                    status: error,
                    message: "No se pudo realizar la compra por falta de stock."
                  }


components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por mongo
        products:
          type: array[cartProducts]
          description: Array de productos de carrito
      example:
        _id: ObjectId(63ed2bcfdb94c8c6ce7722b2)
        products:
          - {
            product: "array[Product]",
            quantity: 20
          }

    cartPurchase:
      type: object
      properties:
        ticket:
          type: ObjectId
          description: Id autogenerado por mongo para el ticket de compra
        products_out_of_stock:
          type: array[ObjectId]
          description: Listado de productos que no se incluyeron en la compra por falta de stock
  
  requestBodies:
    cartBody:
      type: object
      properties:
        products:
          type: array[cartProducts]
          description: Array de productos que contiene el carrito
      example:
        products:
          - {
            product: ObjectId(63ed2bcfdb94c8c6ce7722b2),
            quantity: 20
          }
          - {
            product: ObjectId(63ed2bcfdb94c8c6ce7722b2),
            quantity: 23
          }